<?php
 goto XN08z; fzUfV: define("\x4c\102\137\x41\x50\111\137\x44\105\102\125\x47", false); goto eKJA_; FnUMO: define("\x4c\102\x5f\124\x45\x58\124\x5f\x55\120\104\101\x54\105\x5f\x50\101\124\x48\x5f\x45\x52\x52\117\122", "\106\x6f\154\144\x65\x72\x20\144\157\x65\163\x20\x6e\157\164\40\x68\x61\166\145\40\x77\162\x69\164\x65\40\x70\x65\x72\155\x69\163\163\151\x6f\156\x20\157\162\x20\164\x68\x65\x20\x75\x70\x64\x61\x74\145\40\x66\151\154\145\40\160\141\164\x68\40\143\x6f\165\154\144\40\156\157\x74\40\x62\145\40\162\x65\x73\x6f\x6c\166\x65\x64\x2c\x20\160\154\145\x61\x73\145\40\x63\x6f\x6e\x74\x61\143\x74\40\x73\165\x70\x70\157\x72\164\56"); goto A7xrG; e4tD0: define("\x4c\x42\x5f\124\x45\130\x54\137\x56\105\122\x49\x46\x49\x45\104\137\122\105\123\120\117\x4e\x53\x45", "\x56\145\162\x69\146\151\145\144\x21\40\x54\x68\x61\156\x6b\x73\40\146\157\x72\x20\x70\x75\x72\143\x68\x61\163\151\x6e\147\56"); goto eOhYw; sbiq4: define("\x4c\102\137\x54\105\x58\x54\137\103\117\116\x4e\x45\x43\x54\x49\x4f\x4e\137\x46\101\x49\114\105\x44", "\123\x65\x72\166\145\162\40\151\x73\x20\165\x6e\141\x76\141\x69\x6c\x61\x62\x6c\145\40\141\164\x20\x74\150\145\x20\x6d\x6f\x6d\145\156\x74\54\40\160\x6c\145\x61\x73\x65\x20\x74\x72\171\x20\x61\147\x61\151\x6e\56"); goto b5xB_; pbnNv: @ini_set("\x6d\145\155\x6f\162\171\137\x6c\151\x6d\x69\x74", "\x32\65\66\115"); goto FSdwe; NXCS2: define("\114\x42\137\x54\x45\130\x54\x5f\x50\x52\x45\120\101\x52\111\116\107\137\x53\121\x4c\x5f\x44\117\x57\116\114\x4f\x41\104", "\120\162\x65\x70\x61\x72\151\156\x67\x20\164\157\40\x64\x6f\x77\x6e\x6c\x6f\141\144\x20\123\121\x4c\40\165\x70\x64\141\x74\x65\x2e\x2e\56"); goto yn81b; ybJHR: define("\x4c\102\x5f\x54\x45\130\124\x5f\125\120\104\x41\x54\105\137\120\105\122\x49\117\104\x5f\105\x58\x50\111\122\105\104", "\131\157\x75\162\40\x75\x70\144\x61\x74\145\x20\160\145\x72\x69\157\x64\40\150\x61\163\40\x65\156\x64\x65\144\x20\157\162\x20\x79\157\165\x72\x20\x6c\151\143\145\x6e\x73\x65\x20\151\163\40\x69\156\x76\x61\154\151\144\54\40\x70\154\145\141\163\145\x20\x63\157\156\x74\x61\x63\x74\x20\163\x75\x70\160\x6f\x72\x74\56"); goto FnUMO; Pc7Vm: define("\114\x42\137\124\x45\x58\x54\137\x55\x50\x44\x41\124\105\137\105\x58\124\x52\101\103\124\x49\x4f\x4e\x5f\x45\x52\122\117\x52", "\125\x70\144\x61\x74\x65\x20\x7a\x69\160\x20\145\x78\164\162\141\143\x74\151\x6f\x6e\40\x66\141\x69\154\x65\x64\56"); goto NXCS2; G2K5b: define("\x4c\x42\x5f\x54\105\130\x54\x5f\x44\117\x57\116\x4c\117\x41\x44\x49\x4e\107\x5f\115\101\x49\116", "\x44\157\167\156\x6c\x6f\141\144\x69\156\147\40\x6d\141\151\156\40\165\160\x64\141\164\145\56\x2e\56"); goto ybJHR; he1Z1: define("\114\x42\137\x54\x45\x58\x54\137\x55\x50\104\101\124\105\137\127\111\124\110\x5f\123\x51\x4c\x5f\x49\x4d\120\117\122\x54\137\x46\x41\x49\x4c\105\104", "\x41\160\x70\154\151\x63\141\x74\x69\157\156\x20\167\141\163\x20\163\165\x63\143\145\x73\163\x66\165\154\x6c\171\40\165\160\144\141\x74\x65\x64\40\x62\165\164\x20\141\165\x74\x6f\155\141\164\151\143\40\123\x51\114\x20\151\155\x70\x6f\x72\x74\151\x6e\147\40\x66\x61\151\154\145\144\x2c\40\x70\154\x65\x61\x73\145\40\151\155\x70\157\162\164\40\x74\150\145\x20\144\157\x77\156\154\157\x61\x64\x65\144\x20\123\121\114\x20\x66\151\x6c\x65\x20\151\156\40\171\157\x75\162\40\144\141\x74\141\142\x61\x73\x65\40\x6d\x61\156\x75\141\154\154\x79\x2e"); goto kvXBK; b5xB_: define("\x4c\x42\137\124\105\130\124\x5f\111\116\x56\101\114\x49\x44\137\x52\105\123\x50\117\116\123\x45", "\x53\145\x72\x76\145\x72\40\162\145\x74\165\x72\x6e\x65\x64\x20\141\156\40\x69\x6e\x76\x61\x6c\x69\144\x20\162\x65\x73\x70\157\x6e\163\145\x2c\x20\x70\x6c\x65\x61\x73\x65\40\143\x6f\x6e\x74\141\x63\164\40\x73\x75\160\x70\x6f\162\164\56"); goto e4tD0; eOhYw: define("\x4c\x42\137\x54\x45\130\124\137\120\122\x45\x50\x41\x52\111\116\x47\137\x4d\101\x49\x4e\x5f\x44\117\127\116\x4c\x4f\x41\x44", "\x50\162\145\x70\141\162\151\156\147\40\164\x6f\40\x64\157\167\x6e\x6c\x6f\x61\x64\x20\x6d\141\x69\x6e\40\x75\160\x64\x61\x74\145\56\x2e\x2e"); goto BnT3q; yn81b: define("\x4c\x42\x5f\x54\105\x58\124\137\x53\121\x4c\137\125\x50\104\101\x54\105\137\x53\111\132\105", "\x53\x51\114\40\x55\160\x64\141\164\x65\x20\x73\x69\172\145\72"); goto kVBhq; XN08z: if (count(get_included_files()) == 1) { die("\x4e\157\x20\144\x69\x72\145\x63\x74\x20\x73\x63\162\x69\x70\x74\40\141\x63\x63\x65\163\x73\x20\141\x6c\154\157\x77\x65\144"); } goto fzUfV; BnT3q: define("\114\102\137\x54\105\130\x54\137\x4d\x41\111\116\x5f\125\x50\104\101\x54\x45\x5f\x53\111\x5a\x45", "\115\x61\x69\156\x20\125\x70\x64\141\164\145\x20\163\151\x7a\145\72"); goto ifx9t; aE1Zn: if (@ini_get("\155\x61\x78\x5f\145\x78\145\143\x75\x74\151\157\156\137\164\x69\155\145") !== "\60" && @ini_get("\155\141\170\137\x65\x78\x65\x63\165\x74\x69\157\x6e\137\164\x69\x6d\x65") < 600) { @ini_set("\155\141\170\137\x65\170\x65\143\165\164\x69\157\156\x5f\x74\151\155\145", 600); } goto pbnNv; ifx9t: define("\114\x42\x5f\x54\105\x58\124\x5f\x44\x4f\x4e\x54\137\x52\105\106\122\x45\x53\110", "\50\x50\154\x65\141\163\145\40\144\157\40\156\x6f\x74\40\162\x65\x66\162\x65\x73\150\40\164\x68\145\40\x70\141\x67\x65\51\x2e"); goto G2K5b; CEzVX: if (!LB_API_DEBUG) { @ini_set("\x64\151\x73\x70\x6c\x61\171\137\145\x72\x72\x6f\162\x73", 0); } goto aE1Zn; kVBhq: define("\x4c\x42\x5f\x54\x45\130\x54\137\104\x4f\x57\x4e\114\117\x41\x44\x49\x4e\x47\x5f\123\121\114", "\x44\157\167\156\154\157\x61\x64\x69\156\x67\40\123\121\114\x20\165\x70\x64\x61\164\145\x2e\56\x2e"); goto e_UQ3; QeHzY: define("\x4c\102\137\x54\x45\130\x54\x5f\x55\x50\104\x41\x54\x45\137\127\x49\124\110\x5f\123\x51\x4c\x5f\104\x4f\116\105", "\101\x70\x70\x6c\x69\x63\141\x74\x69\157\x6e\40\x77\x61\163\x20\163\x75\x63\143\145\x73\x73\x66\x75\154\x6c\x79\40\165\x70\x64\x61\164\145\x64\54\40\x70\154\x65\x61\x73\x65\x20\x69\x6d\160\x6f\x72\x74\x20\x74\150\145\x20\x64\157\x77\156\154\157\x61\144\145\x64\40\x53\121\114\x20\146\x69\154\x65\40\x69\x6e\x20\x79\157\165\162\x20\x64\x61\164\141\x62\141\163\145\40\155\x61\x6e\x75\x61\x6c\x6c\171\56"); goto jApur; e_UQ3: define("\114\x42\137\x54\x45\x58\124\137\123\121\x4c\137\125\120\x44\101\124\x45\137\x44\117\x4e\105", "\x53\x51\114\40\x75\160\144\x61\x74\x65\x20\146\151\154\x65\163\x20\x64\157\167\x6e\x6c\x6f\x61\x64\x65\144\x2e"); goto he1Z1; kvXBK: define("\114\102\x5f\124\105\x58\x54\137\x55\x50\x44\101\x54\105\x5f\x57\x49\x54\x48\x5f\123\121\x4c\x5f\111\115\x50\x4f\x52\124\x5f\x44\x4f\x4e\x45", "\101\x70\160\x6c\x69\x63\141\164\x69\157\x6e\x20\167\141\x73\40\163\165\x63\143\145\x73\x73\146\165\154\154\x79\40\165\160\144\x61\164\145\x64\x20\x61\x6e\x64\40\x53\121\114\x20\146\x69\154\x65\x20\167\141\x73\x20\x61\165\164\x6f\155\x61\x74\151\x63\x61\x6c\x6c\171\x20\151\x6d\x70\x6f\162\x74\145\x64\56"); goto QeHzY; eKJA_: define("\x4c\x42\x5f\x53\x48\117\127\137\125\120\104\101\124\x45\x5f\120\122\117\107\122\105\x53\123", true); goto sbiq4; jApur: define("\x4c\102\137\124\105\130\x54\137\x55\x50\x44\x41\x54\x45\x5f\x57\x49\124\110\117\x55\124\137\123\x51\x4c\137\x44\x4f\116\105", "\x41\160\160\154\151\143\141\x74\x69\x6f\x6e\x20\167\x61\163\40\163\x75\x63\x63\x65\163\x73\146\x75\x6c\154\x79\x20\165\160\x64\141\x74\x65\144\x2c\x20\164\x68\145\x72\x65\40\167\145\162\145\40\x6e\x6f\40\123\x51\x4c\40\165\x70\144\141\x74\145\x73\x2e"); goto CEzVX; A7xrG: define("\114\102\x5f\x54\105\x58\124\x5f\x4d\x41\x49\x4e\137\x55\x50\104\101\x54\105\137\x44\x4f\x4e\105", "\x4d\x61\151\x6e\40\165\x70\x64\x61\164\x65\40\146\x69\x6c\x65\163\x20\x64\157\x77\x6e\x6c\x6f\x61\x64\x65\144\x20\x61\x6e\x64\40\x65\170\x74\x72\x61\143\x74\145\144\x2e"); goto Pc7Vm; FSdwe: class LicenseBoxAPI { private $product_id; private $api_url; private $api_key; private $api_language; private $current_version; private $verify_type; private $verification_period; private $current_path; private $root_path; private $license_file; public function __construct() { $this->product_id = "\71\x38\103\x34\71\x33\x44\102"; $this->api_url = "\150\x74\164\160\x73\x3a\x2f\x2f\x76\145\x72\x69\x66\x79\x2e\x77\x69\154\154\144\145\166\x2e\x69\156\x2f"; $this->api_key = "\103\102\103\x36\67\66\x33\67\104\64\71\x41\x34\60\x38\x35\x33\x30\66\x38"; $this->api_language = "\145\156\147\154\x69\x73\150"; $this->current_version = "\x76\x31\56\60\x2e\60"; $this->verify_type = "\x65\x6e\166\x61\x74\x6f"; $this->verification_period = 365; $this->current_path = realpath(__DIR__); $this->root_path = realpath($this->current_path . "\57\56\56"); $this->license_file = $this->current_path . "\x2f\x2e\154\x69\143"; } public function check_local_license_exist() { return is_file($this->license_file); } public function get_current_version() { return $this->current_version; } private function call_api($method, $url, $data) { $curl = curl_init(); switch ($method) { case "\120\117\123\x54": curl_setopt($curl, CURLOPT_POST, 1); if ($data) { curl_setopt($curl, CURLOPT_POSTFIELDS, $data); } break; case "\120\125\124": curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "\120\x55\124"); if ($data) { curl_setopt($curl, CURLOPT_POSTFIELDS, $data); } break; default: if ($data) { $url = sprintf("\x25\163\x3f\x25\x73", $url, http_build_query($data)); } } $this_server_name = getenv("\x53\105\122\126\x45\122\x5f\x4e\x41\115\x45") ?: $_SERVER["\123\x45\x52\x56\x45\x52\137\x4e\101\x4d\105"] ?: getenv("\x48\x54\124\x50\137\110\117\123\124") ?: $_SERVER["\x48\x54\124\x50\137\110\117\x53\x54"]; $this_http_or_https = (isset($_SERVER["\110\x54\x54\120\123"]) && $_SERVER["\110\x54\x54\x50\x53"] == "\157\156" or isset($_SERVER["\x48\124\124\x50\137\x58\137\x46\117\x52\127\x41\x52\104\105\x44\137\120\122\117\124\x4f"]) and $_SERVER["\110\x54\x54\120\137\x58\x5f\x46\117\122\127\x41\122\104\105\104\x5f\x50\122\117\124\117"] === "\150\x74\x74\160\x73") ? "\150\164\x74\x70\163\x3a\x2f\x2f" : "\150\164\x74\160\x3a\57\57"; $this_url = $this_http_or_https . $this_server_name . $_SERVER["\x52\105\121\x55\105\x53\124\137\125\122\111"]; $this_ip = getenv("\x53\x45\122\126\105\x52\137\101\x44\104\x52") ?: $_SERVER["\123\105\x52\126\x45\122\137\101\104\104\122"] ?: $this->get_ip_from_third_party() ?: gethostbyname(gethostname()); curl_setopt($curl, CURLOPT_HTTPHEADER, array("\x43\x6f\156\x74\145\156\x74\x2d\124\171\x70\x65\72\x20\141\x70\x70\154\x69\143\x61\x74\151\157\x6e\x2f\152\x73\157\156", "\x4c\x42\x2d\101\120\x49\55\x4b\105\x59\72\x20" . $this->api_key, "\114\x42\55\x55\x52\x4c\72\40" . $this_url, "\114\102\55\x49\120\72\x20" . $this_ip, "\x4c\102\55\x4c\101\116\107\x3a\x20" . $this->api_language)); curl_setopt($curl, CURLOPT_URL, $url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 30); curl_setopt($curl, CURLOPT_TIMEOUT, 30); $result = curl_exec($curl); if (!$result && !LB_API_DEBUG) { $rs = array("\x73\164\x61\x74\x75\163" => FALSE, "\155\x65\x73\x73\141\147\x65" => LB_TEXT_CONNECTION_FAILED); return json_encode($rs); } $http_status = curl_getinfo($curl, CURLINFO_HTTP_CODE); if ($http_status != 200) { if (LB_API_DEBUG) { $temp_decode = json_decode($result, true); $rs = array("\x73\x74\141\164\165\x73" => FALSE, "\x6d\x65\163\163\x61\147\145" => !empty($temp_decode["\145\162\x72\157\162"]) ? $temp_decode["\x65\x72\162\157\x72"] : $temp_decode["\x6d\145\x73\x73\x61\x67\145"]); return json_encode($rs); } else { $rs = array("\x73\x74\141\x74\165\163" => FALSE, "\x6d\x65\163\x73\x61\147\145" => LB_TEXT_INVALID_RESPONSE); return json_encode($rs); } } curl_close($curl); return $result; } public function check_connection() { $data_array = array(); $get_data = $this->call_api("\x50\117\123\124", $this->api_url . "\x61\160\151\x2f\143\150\145\143\x6b\x5f\x63\x6f\x6e\x6e\x65\143\x74\151\157\x6e\137\145\170\164", json_encode($data_array)); $response = json_decode($get_data, true); return $response; } public function get_latest_version() { $data_array = array("\x70\x72\x6f\144\x75\143\x74\x5f\x69\144" => $this->product_id); $get_data = $this->call_api("\120\117\123\124", $this->api_url . "\141\160\151\x2f\x6c\141\164\145\x73\164\137\166\145\x72\163\x69\x6f\x6e", json_encode($data_array)); $response = json_decode($get_data, true); return $response; } public function activate_license($license, $client, $create_lic = true) { $data_array = array("\x70\162\157\144\x75\143\164\137\x69\x64" => $this->product_id, "\154\151\143\x65\156\163\145\x5f\143\157\144\145" => $license, "\x63\154\151\145\156\164\x5f\156\x61\x6d\145" => $client, "\166\x65\162\x69\146\171\137\x74\171\x70\x65" => $this->verify_type); $get_data = $this->call_api("\120\x4f\123\x54", $this->api_url . "\x61\160\x69\57\141\x63\x74\x69\166\x61\x74\145\137\x6c\x69\143\145\156\x73\145", json_encode($data_array)); $response = json_decode($get_data, true); if (!empty($create_lic)) { if ($response["\163\x74\x61\x74\x75\163"]) { $licfile = trim($response["\154\x69\x63\x5f\162\145\x73\x70\157\x6e\x73\x65"]); file_put_contents($this->license_file, $licfile, LOCK_EX); } else { @chmod($this->license_file, 511); if (is_writeable($this->license_file)) { unlink($this->license_file); } } } return $response; } public function verify_license($time_based_check = false, $license = false, $client = false) { if (!empty($license) && !empty($client)) { $data_array = array("\x70\x72\x6f\x64\x75\143\x74\137\151\144" => $this->product_id, "\x6c\151\x63\145\156\163\145\x5f\x66\x69\x6c\145" => null, "\x6c\151\x63\145\x6e\x73\x65\137\x63\x6f\x64\x65" => $license, "\143\154\151\x65\156\164\x5f\156\141\155\x65" => $client); } else { if (is_file($this->license_file)) { $data_array = array("\x70\x72\x6f\x64\165\143\x74\137\151\x64" => $this->product_id, "\x6c\151\x63\145\x6e\x73\145\137\146\x69\x6c\x65" => file_get_contents($this->license_file), "\x6c\151\x63\145\x6e\163\145\137\x63\157\x64\145" => null, "\143\x6c\151\145\156\164\x5f\156\141\x6d\145" => null); } else { $data_array = array(); } } $res = array("\163\164\x61\164\x75\163" => TRUE, "\x6d\145\x73\x73\141\147\145" => LB_TEXT_VERIFIED_RESPONSE); if ($time_based_check && $this->verification_period > 0) { ob_start(); if (session_status() == PHP_SESSION_NONE) { session_start(); } $type = (int) $this->verification_period; $today = date("\144\55\x6d\x2d\131"); if (empty($_SESSION["\71\146\144\142\65\65\65\x64\x34\x32\x37\x63\61\x33\146"])) { $_SESSION["\x39\x66\144\x62\65\65\65\144\x34\62\67\x63\x31\63\x66"] = "\60\x30\55\60\x30\55\x30\x30\x30\60"; } if ($type == 1) { $type_text = "\x31\40\x64\141\x79"; } elseif ($type == 3) { $type_text = "\x33\x20\144\141\x79\163"; } elseif ($type == 7) { $type_text = "\61\x20\167\x65\145\153"; } elseif ($type == 30) { $type_text = "\61\40\x6d\x6f\156\x74\x68"; } elseif ($type == 90) { $type_text = "\x33\x20\155\157\156\164\x68\x73"; } elseif ($type == 365) { $type_text = "\61\40\x79\145\141\x72"; } else { $type_text = $type . "\x20\144\x61\171\x73"; } if (strtotime($today) >= strtotime($_SESSION["\x39\146\144\x62\65\x35\x35\144\64\62\67\143\61\x33\146"])) { $get_data = $this->call_api("\120\117\123\124", $this->api_url . "\x61\x70\151\x2f\166\145\x72\x69\x66\x79\137\154\151\143\145\x6e\163\x65", json_encode($data_array)); $res = json_decode($get_data, true); if ($res["\163\164\x61\164\x75\x73"] == true) { $tomo = date("\144\x2d\155\x2d\131", strtotime($today . "\40\x2b\40" . $type_text)); $_SESSION["\71\146\144\x62\x35\x35\x35\144\64\62\67\143\x31\63\x66"] = $tomo; } } ob_end_clean(); } else { $get_data = $this->call_api("\120\x4f\123\x54", $this->api_url . "\x61\160\151\57\x76\145\x72\151\x66\x79\x5f\154\151\x63\x65\x6e\163\145", json_encode($data_array)); $res = json_decode($get_data, true); } return $res; } public function deactivate_license($license = false, $client = false) { if (!empty($license) && !empty($client)) { $data_array = array("\x70\x72\x6f\144\165\x63\x74\x5f\151\x64" => $this->product_id, "\154\x69\x63\145\156\x73\x65\x5f\146\x69\x6c\x65" => null, "\x6c\151\143\x65\x6e\163\145\x5f\x63\157\144\x65" => $license, "\x63\154\x69\x65\156\x74\x5f\156\x61\x6d\x65" => $client); } else { if (is_file($this->license_file)) { $data_array = array("\x70\162\157\144\165\143\x74\137\x69\x64" => $this->product_id, "\x6c\151\143\x65\x6e\x73\x65\137\146\x69\154\x65" => file_get_contents($this->license_file), "\x6c\151\143\x65\x6e\163\145\x5f\x63\157\144\145" => null, "\143\154\151\x65\156\164\x5f\156\141\155\x65" => null); } else { $data_array = array(); } } $get_data = $this->call_api("\x50\x4f\123\124", $this->api_url . "\x61\160\x69\x2f\x64\x65\x61\143\x74\151\166\x61\x74\145\137\x6c\x69\143\x65\x6e\163\145", json_encode($data_array)); $response = json_decode($get_data, true); if ($response["\163\x74\141\x74\165\x73"]) { @chmod($this->license_file, 511); if (is_writeable($this->license_file)) { unlink($this->license_file); } } return $response; } public function check_update() { $data_array = array("\x70\162\x6f\144\x75\x63\164\137\x69\x64" => $this->product_id, "\143\x75\x72\x72\145\156\164\137\166\x65\162\x73\x69\157\x6e" => $this->current_version); $get_data = $this->call_api("\120\x4f\123\x54", $this->api_url . "\x61\x70\x69\57\x63\x68\145\143\153\137\165\160\x64\141\x74\x65", json_encode($data_array)); $response = json_decode($get_data, true); return $response; } public function download_update($update_id, $type, $version, $license = false, $client = false, $db_for_import = false) { if (!empty($license) && !empty($client)) { $data_array = array("\154\151\143\x65\x6e\x73\145\x5f\x66\x69\x6c\145" => null, "\x6c\x69\143\x65\x6e\163\x65\x5f\x63\157\144\145" => $license, "\x63\x6c\151\x65\156\x74\x5f\x6e\141\x6d\x65" => $client); } else { if (is_file($this->license_file)) { $data_array = array("\x6c\151\143\x65\156\163\x65\x5f\x66\151\x6c\145" => file_get_contents($this->license_file), "\154\151\143\x65\x6e\163\x65\137\x63\157\144\145" => null, "\143\154\151\145\x6e\x74\137\156\x61\x6d\x65" => null); } else { $data_array = array(); } } ob_end_flush(); ob_implicit_flush(true); $version = str_replace("\56", "\137", $version); ob_start(); $source_size = $this->api_url . "\141\x70\x69\57\147\145\164\137\x75\x70\144\x61\x74\145\137\163\x69\x7a\145\57\x6d\x61\x69\x6e\x2f" . $update_id; echo LB_TEXT_PREPARING_MAIN_DOWNLOAD . "\x3c\x62\162\x3e"; if (LB_SHOW_UPDATE_PROGRESS) { echo "\x3c\163\143\162\151\x70\x74\x3e\144\157\143\x75\x6d\x65\156\164\56\147\145\164\105\154\145\x6d\x65\156\x74\102\x79\111\x64\50\47\x70\x72\x6f\x67\x27\51\56\166\x61\154\165\x65\40\x3d\x20\x31\73\x3c\x2f\x73\x63\x72\x69\x70\x74\x3e"; } ob_flush(); echo LB_TEXT_MAIN_UPDATE_SIZE . "\40" . $this->get_remote_filesize($source_size) . "\x20" . LB_TEXT_DONT_REFRESH . "\74\142\162\x3e"; if (LB_SHOW_UPDATE_PROGRESS) { echo "\74\x73\143\x72\x69\160\164\76\x64\157\x63\x75\155\x65\x6e\164\56\147\x65\x74\x45\154\145\155\x65\156\164\x42\x79\x49\144\50\47\x70\162\157\147\x27\x29\x2e\166\141\x6c\165\x65\40\x3d\x20\x35\x3b\74\57\x73\143\162\x69\x70\164\x3e"; } ob_flush(); $temp_progress = ''; $ch = curl_init(); $source = $this->api_url . "\x61\x70\x69\x2f\x64\157\x77\156\154\157\x61\x64\137\x75\x70\144\141\x74\x65\57\155\x61\151\x6e\57" . $update_id; curl_setopt($ch, CURLOPT_URL, $source); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, $data_array); $this_server_name = getenv("\123\105\122\126\105\x52\137\116\x41\115\x45") ?: $_SERVER["\123\x45\122\x56\105\x52\137\116\x41\115\x45"] ?: getenv("\110\124\124\x50\137\x48\117\x53\124") ?: $_SERVER["\x48\x54\x54\x50\137\x48\117\x53\124"]; $this_http_or_https = (isset($_SERVER["\x48\124\124\120\x53"]) && $_SERVER["\x48\124\x54\120\123"] == "\x6f\156" or isset($_SERVER["\x48\x54\x54\x50\x5f\130\137\106\x4f\122\x57\101\122\104\105\x44\137\120\122\x4f\124\x4f"]) and $_SERVER["\110\x54\x54\120\x5f\130\137\106\117\x52\127\101\122\104\x45\104\x5f\x50\122\x4f\124\x4f"] === "\x68\x74\164\x70\x73") ? "\x68\x74\x74\160\163\72\57\57" : "\x68\x74\x74\x70\72\x2f\x2f"; $this_url = $this_http_or_https . $this_server_name . $_SERVER["\122\105\121\x55\x45\123\x54\x5f\125\122\111"]; $this_ip = getenv("\123\x45\x52\126\x45\x52\137\x41\104\x44\x52") ?: $_SERVER["\x53\x45\x52\x56\x45\x52\137\x41\x44\x44\x52"] ?: $this->get_ip_from_third_party() ?: gethostbyname(gethostname()); curl_setopt($ch, CURLOPT_HTTPHEADER, array("\x4c\102\x2d\101\120\111\55\x4b\105\131\72\40" . $this->api_key, "\x4c\x42\x2d\x55\x52\114\72\x20" . $this_url, "\x4c\x42\x2d\x49\x50\x3a\40" . $this_ip, "\114\102\x2d\114\101\116\107\x3a\40" . $this->api_language)); if (LB_SHOW_UPDATE_PROGRESS) { curl_setopt($ch, CURLOPT_PROGRESSFUNCTION, array($this, "\160\162\157\147\x72\x65\x73\x73")); } if (LB_SHOW_UPDATE_PROGRESS) { curl_setopt($ch, CURLOPT_NOPROGRESS, false); } curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 30); echo LB_TEXT_DOWNLOADING_MAIN . "\74\142\x72\76"; if (LB_SHOW_UPDATE_PROGRESS) { echo "\x3c\x73\143\162\x69\x70\164\76\144\157\143\165\x6d\145\156\x74\56\147\145\164\105\x6c\145\155\145\156\x74\x42\x79\x49\x64\x28\47\160\x72\157\147\47\51\56\166\141\x6c\x75\x65\40\75\40\x31\60\x3b\74\x2f\x73\x63\162\151\160\164\x3e"; } ob_flush(); $data = curl_exec($ch); $http_status = curl_getinfo($ch, CURLINFO_HTTP_CODE); if ($http_status != 200) { if ($http_status == 401) { curl_close($ch); die("\74\142\x72\76" . LB_TEXT_UPDATE_PERIOD_EXPIRED); } else { curl_close($ch); die("\74\142\162\76" . LB_TEXT_INVALID_RESPONSE); } } curl_close($ch); $destination = $this->root_path . "\x2f\x75\x70\x64\x61\164\x65\137\x6d\141\151\156\x5f" . $version . "\x2e\x7a\x69\x70"; $file = fopen($destination, "\x77\53"); if (!$file) { die("\74\142\x72\x3e" . LB_TEXT_UPDATE_PATH_ERROR); } fputs($file, $data); fclose($file); if (LB_SHOW_UPDATE_PROGRESS) { echo "\74\x73\x63\162\151\160\164\x3e\144\157\x63\x75\x6d\x65\x6e\x74\56\x67\145\164\x45\154\x65\155\x65\156\164\x42\x79\x49\x64\50\47\x70\x72\157\x67\x27\x29\x2e\166\141\x6c\165\x65\x20\x3d\40\66\65\x3b\74\x2f\163\x63\162\x69\x70\x74\x3e"; } ob_flush(); $zip = new ZipArchive(); $res = $zip->open($destination); if ($res === TRUE) { $zip->extractTo($this->root_path . "\x2f"); $zip->close(); unlink($destination); echo LB_TEXT_MAIN_UPDATE_DONE . "\74\x62\162\x3e\x3c\x62\162\76"; if (LB_SHOW_UPDATE_PROGRESS) { echo "\74\163\x63\162\x69\160\164\x3e\144\x6f\x63\x75\155\x65\x6e\164\x2e\x67\145\x74\105\x6c\x65\155\145\x6e\x74\102\171\x49\x64\x28\x27\x70\162\x6f\x67\47\51\56\166\141\x6c\165\x65\x20\75\40\67\65\x3b\x3c\x2f\163\x63\162\151\160\164\x3e"; } ob_flush(); } else { echo LB_TEXT_UPDATE_EXTRACTION_ERROR . "\x3c\x62\x72\76\x3c\x62\x72\76"; ob_flush(); } if ($type == true) { $source_size = $this->api_url . "\x61\x70\x69\57\147\x65\164\137\x75\160\x64\141\164\145\x5f\x73\x69\172\145\x2f\x73\161\154\x2f" . $update_id; echo LB_TEXT_PREPARING_SQL_DOWNLOAD . "\x3c\142\162\x3e"; ob_flush(); echo LB_TEXT_SQL_UPDATE_SIZE . "\x20" . $this->get_remote_filesize($source_size) . "\x20" . LB_TEXT_DONT_REFRESH . "\x3c\x62\x72\x3e"; if (LB_SHOW_UPDATE_PROGRESS) { echo "\74\x73\x63\162\151\160\164\76\144\157\x63\x75\x6d\x65\x6e\164\x2e\147\145\x74\105\154\x65\155\x65\x6e\x74\x42\x79\x49\144\50\47\160\162\157\147\x27\51\x2e\x76\x61\154\165\145\40\x3d\40\70\65\x3b\74\x2f\x73\143\162\x69\x70\x74\x3e"; } ob_flush(); $temp_progress = ''; $ch = curl_init(); $source = $this->api_url . "\141\x70\151\x2f\x64\x6f\x77\156\x6c\x6f\x61\x64\x5f\165\x70\x64\141\164\145\57\163\161\x6c\57" . $update_id; curl_setopt($ch, CURLOPT_URL, $source); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, $data_array); $this_server_name = getenv("\123\x45\x52\x56\105\x52\x5f\x4e\101\115\x45") ?: $_SERVER["\x53\x45\x52\126\105\x52\137\116\101\115\x45"] ?: getenv("\110\124\x54\120\137\x48\x4f\x53\x54") ?: $_SERVER["\110\x54\124\x50\x5f\110\x4f\x53\124"]; $this_http_or_https = (isset($_SERVER["\x48\x54\x54\x50\x53"]) && $_SERVER["\x48\x54\124\120\123"] == "\x6f\x6e" or isset($_SERVER["\x48\124\124\x50\137\x58\x5f\106\117\x52\x57\101\x52\104\x45\x44\x5f\120\122\x4f\x54\117"]) and $_SERVER["\x48\124\124\120\137\x58\x5f\x46\117\122\x57\101\x52\x44\105\104\137\x50\x52\x4f\124\117"] === "\x68\164\x74\160\163") ? "\150\164\164\x70\163\72\57\57" : "\150\164\164\160\72\x2f\57"; $this_url = $this_http_or_https . $this_server_name . $_SERVER["\122\105\121\125\105\x53\124\x5f\x55\x52\x49"]; $this_ip = getenv("\123\105\x52\x56\105\122\x5f\x41\x44\x44\122") ?: $_SERVER["\x53\x45\122\x56\105\x52\x5f\101\x44\104\122"] ?: $this->get_ip_from_third_party() ?: gethostbyname(gethostname()); curl_setopt($ch, CURLOPT_HTTPHEADER, array("\x4c\x42\55\x41\120\x49\55\x4b\105\131\x3a\40" . $this->api_key, "\114\102\55\x55\122\x4c\x3a\40" . $this_url, "\x4c\x42\x2d\111\120\72\x20" . $this_ip, "\x4c\102\55\114\x41\x4e\107\72\40" . $this->api_language)); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 30); echo LB_TEXT_DOWNLOADING_SQL . "\x3c\x62\x72\76"; if (LB_SHOW_UPDATE_PROGRESS) { echo "\74\163\x63\x72\151\160\x74\x3e\144\x6f\143\165\x6d\x65\156\164\56\x67\x65\164\105\x6c\x65\x6d\145\x6e\164\x42\x79\x49\x64\x28\x27\160\x72\x6f\x67\47\x29\x2e\166\141\x6c\x75\145\40\75\x20\71\60\73\x3c\57\163\x63\162\x69\x70\164\x3e"; } ob_flush(); $data = curl_exec($ch); $http_status = curl_getinfo($ch, CURLINFO_HTTP_CODE); if ($http_status != 200) { curl_close($ch); die(LB_TEXT_INVALID_RESPONSE); } curl_close($ch); $destination = $this->root_path . "\57\x75\x70\144\141\164\145\x5f\x73\x71\x6c\137" . $version . "\x2e\x73\161\x6c"; $file = fopen($destination, "\x77\53"); if (!$file) { die(LB_TEXT_UPDATE_PATH_ERROR); } fputs($file, $data); fclose($file); echo LB_TEXT_SQL_UPDATE_DONE . "\74\142\162\x3e\x3c\142\162\76"; if (LB_SHOW_UPDATE_PROGRESS) { echo "\x3c\163\x63\162\151\x70\164\76\x64\x6f\143\x75\x6d\145\x6e\x74\x2e\147\x65\164\x45\154\x65\155\145\x6e\164\x42\171\111\x64\x28\x27\x70\162\157\147\x27\51\56\166\x61\154\x75\145\40\x3d\x20\x39\x35\73\74\x2f\x73\x63\162\151\x70\164\76"; } ob_flush(); if (is_array($db_for_import)) { if (!empty($db_for_import["\144\142\137\150\157\x73\x74"]) && !empty($db_for_import["\x64\142\x5f\x75\163\145\x72"]) && !empty($db_for_import["\x64\x62\x5f\x6e\141\155\x65"])) { $db_host = strip_tags(trim($db_for_import["\x64\142\x5f\x68\x6f\x73\x74"])); $db_user = strip_tags(trim($db_for_import["\144\142\137\165\x73\x65\x72"])); $db_pass = strip_tags(trim($db_for_import["\x64\142\x5f\x70\x61\x73\163"])); $db_name = strip_tags(trim($db_for_import["\x64\142\x5f\x6e\x61\155\145"])); $con = @mysqli_connect($db_host, $db_user, $db_pass, $db_name); if (mysqli_connect_errno()) { echo LB_TEXT_UPDATE_WITH_SQL_IMPORT_FAILED; } else { $templine = ''; $lines = file($destination); foreach ($lines as $line) { if (substr($line, 0, 2) == "\x2d\x2d" || $line == '') { continue; } $templine .= $line; $query = false; if (substr(trim($line), -1, 1) == "\73") { $query = mysqli_query($con, $templine); $templine = ''; } } @chmod($destination, 511); if (is_writeable($destination)) { unlink($destination); } echo LB_TEXT_UPDATE_WITH_SQL_IMPORT_DONE; } } else { echo LB_TEXT_UPDATE_WITH_SQL_IMPORT_FAILED; } } else { echo LB_TEXT_UPDATE_WITH_SQL_DONE; } if (LB_SHOW_UPDATE_PROGRESS) { echo "\x3c\163\143\162\x69\160\164\76\x64\x6f\x63\165\155\x65\x6e\164\56\x67\145\164\x45\x6c\145\155\x65\156\164\x42\x79\111\x64\50\x27\x70\162\x6f\147\47\51\56\166\x61\154\165\x65\x20\x3d\40\61\60\60\73\74\x2f\163\x63\162\x69\x70\164\76"; } ob_flush(); } else { if (LB_SHOW_UPDATE_PROGRESS) { echo "\74\163\143\162\151\x70\164\76\x64\x6f\x63\165\155\x65\x6e\x74\x2e\x67\x65\x74\105\154\145\155\145\156\x74\x42\x79\111\x64\50\47\160\162\x6f\147\x27\51\56\x76\x61\x6c\x75\145\x20\75\40\61\x30\60\73\x3c\57\x73\143\162\x69\160\x74\x3e"; } echo LB_TEXT_UPDATE_WITHOUT_SQL_DONE; ob_flush(); } ob_end_flush(); } private function progress($resource, $download_size, $downloaded, $upload_size, $uploaded) { static $prev = 0; if ($download_size == 0) { $progress = 0; } else { $progress = round($downloaded * 100 / $download_size); } if ($progress != $prev && $progress == 25) { $prev = $progress; echo "\74\x73\143\162\x69\x70\164\x3e\144\157\143\165\x6d\145\156\x74\56\x67\145\x74\105\154\145\x6d\x65\x6e\164\102\171\111\x64\50\x27\x70\x72\157\147\x27\x29\56\166\141\x6c\x75\x65\40\75\x20\x32\x32\56\x35\x3b\x3c\57\163\143\162\151\x70\164\76"; ob_flush(); } if ($progress != $prev && $progress == 50) { $prev = $progress; echo "\74\163\x63\162\x69\x70\164\76\x64\157\x63\x75\155\x65\x6e\164\x2e\x67\x65\164\x45\x6c\x65\155\x65\x6e\164\x42\171\x49\144\x28\47\160\162\157\147\x27\51\56\x76\141\x6c\165\145\x20\75\40\63\x35\73\74\57\x73\143\x72\x69\160\164\76"; ob_flush(); } if ($progress != $prev && $progress == 75) { $prev = $progress; echo "\74\x73\143\162\151\x70\x74\x3e\144\157\143\165\x6d\145\156\164\x2e\147\145\x74\x45\x6c\145\155\x65\156\x74\x42\x79\x49\144\50\x27\160\162\157\147\47\x29\56\x76\141\x6c\x75\145\40\75\40\64\67\56\x35\x3b\74\57\x73\x63\162\151\160\x74\76"; ob_flush(); } if ($progress != $prev && $progress == 100) { $prev = $progress; echo "\x3c\163\143\162\151\160\164\76\x64\x6f\143\165\x6d\x65\156\164\x2e\147\145\164\x45\154\x65\155\145\x6e\164\x42\x79\111\144\50\47\160\x72\x6f\x67\47\x29\x2e\166\x61\x6c\165\145\x20\75\40\66\x30\73\x3c\57\163\143\162\x69\160\x74\x3e"; ob_flush(); } } private function get_ip_from_third_party() { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, "\x68\x74\x74\x70\x3a\x2f\x2f\x69\160\x65\143\x68\x6f\56\x6e\x65\164\x2f\x70\154\141\x69\156"); curl_setopt($curl, CURLOPT_HEADER, 0); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 10); curl_setopt($curl, CURLOPT_TIMEOUT, 10); $response = curl_exec($curl); curl_close($curl); return $response; } private function get_remote_filesize($url) { $curl = curl_init(); curl_setopt($curl, CURLOPT_HEADER, TRUE); curl_setopt($curl, CURLOPT_URL, $url); curl_setopt($curl, CURLOPT_NOBODY, TRUE); $this_server_name = getenv("\x53\105\x52\126\105\x52\x5f\116\101\115\x45") ?: $_SERVER["\123\x45\x52\126\105\x52\x5f\x4e\x41\115\105"] ?: getenv("\110\x54\x54\120\x5f\x48\117\x53\x54") ?: $_SERVER["\110\124\124\x50\137\x48\x4f\x53\124"]; $this_http_or_https = (isset($_SERVER["\110\x54\124\120\x53"]) && $_SERVER["\110\x54\x54\x50\123"] == "\157\x6e" or isset($_SERVER["\110\x54\124\120\x5f\130\x5f\106\117\122\x57\101\x52\x44\x45\x44\x5f\120\122\x4f\124\x4f"]) and $_SERVER["\x48\124\x54\x50\137\130\137\x46\x4f\122\x57\101\122\x44\105\104\137\120\122\x4f\124\x4f"] === "\150\x74\x74\160\163") ? "\x68\x74\x74\160\163\72\x2f\57" : "\x68\164\x74\160\72\x2f\57"; $this_url = $this_http_or_https . $this_server_name . $_SERVER["\x52\x45\x51\125\x45\x53\x54\x5f\125\122\x49"]; $this_ip = getenv("\x53\105\x52\x56\105\122\137\x41\104\104\122") ?: $_SERVER["\x53\x45\x52\x56\x45\122\x5f\x41\104\104\122"] ?: $this->get_ip_from_third_party() ?: gethostbyname(gethostname()); curl_setopt($curl, CURLOPT_HTTPHEADER, array("\114\x42\x2d\x41\x50\111\x2d\x4b\105\x59\x3a\x20" . $this->api_key, "\114\x42\55\x55\x52\114\x3a\40" . $this_url, "\x4c\x42\55\x49\x50\72\40" . $this_ip, "\x4c\102\55\114\x41\116\107\72\40" . $this->api_language)); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 30); $result = curl_exec($curl); $filesize = curl_getinfo($curl, CURLINFO_CONTENT_LENGTH_DOWNLOAD); if ($filesize) { switch ($filesize) { case $filesize < 1024: $size = $filesize . "\x20\x42"; break; case $filesize < 1048576: $size = round($filesize / 1024, 2) . "\x20\x4b\x42"; break; case $filesize < 1073741824: $size = round($filesize / 1048576, 2) . "\x20\115\x42"; break; case $filesize < 1099511627776: $size = round($filesize / 1073741824, 2) . "\x20\107\x42"; break; } return $size; } } }